✅ 
/* Анимация градиента */

🔶 Хорошо анимируются те параметры, которые выражены в цифрах: background-position, background-size, направление градиента и точки остановки цвета. 


1️⃣Фишка в том, чтобы сделать фон больше, чем размер блока.
Это нужно потому, что проценты для background-position рассчитываются от разницы между размером элемента и размером фонового изображения. 

✏️ Пример написания:

.shine {
    background:
    radial-gradient( 
      #fff 0%,
      #3cf 4%,
      #00bfff 12.25%,
      #07f 31.25%,
      #00091c 50%
    );
    background-size: 200% 200%; /* Фон стал больше, чем элемент. Он выходит за границы элемента, но мы этого не видим. При этом центр градиента совпадает с центром элемента */ 
}

2️⃣Расположение фона как top right. 
Когда мы задаём расположение фона top right, то совмещаем верхний правый угол фона с верхним правым углом элемента.
Из-за размеров фона его центр вместе с центром градиента оказывается в левом нижнем углу элемента.

✏️ Пример написания:

.shine {
    background:
    radial-gradient( 
      #fff 0%,
      #3cf 4%,
      #00bfff 12.25%,
      #07f 31.25%,
      #00091c 50%
    );
    background-size: 200% 200%; 
    background-position: top right;    
}

3️⃣Определим размер и направление градиента. 
Сместим его центр вверх (at top). А размера он должен быть такого, чтобы достигнуть самого дальнего угла блока (farthest-corner).

✏️ Пример написания:

.shine {
    background:
    radial-gradient(farthest-corner at top, /* Центр градиента сместится вверх, но будет видно только его часть в левом верхнем углу */
      #fff 0%,
      #3cf 4%,
      #00bfff 12.25%,
      #07f 31.25%,
      #00091c 50%
    );
    background-size: 200% 200%; 
    background-position: top right;    
}



4️⃣ Создадим анимацию. 
Задайте внутри правила keyframes смену позиции фона на top left.

✏️ Пример написания:

@keyframes blick {
    to {
      background-position: top left; /* Когда мы указываем положение фона top left, то верхний левый угол фона и верхний левый угол элемента совмещаются */
    }
}

.shine {
    background:
    radial-gradient(farthest-corner at top, 
      #fff 0%,
      #3cf 4%,
      #00bfff 12.25%,
      #07f 31.25%,
      #00091c 50%
    );
    background-size: 200% 200%; 
    background-position: top right;    
}

🔴Наведите мышку на кнопку и наслаждайтесь эффектом!🔴



✅ 
/* Анимация цвета градиента */

Директива @property - способ анимировать цвет градиента

❗❗❗Есть одно ограничение — этот способ пока не поддерживается в браузере Firefox, так что использовать этот способ в реальных проектах не получится. ❗❗❗

❗❗❗Проблема в плавности градиентов была в том, что браузер неправильно определял тип значения, которое он должен был анимировать. В случае с цветом он определял его как строку и не мог построить плавного перехода между двумя значениями строк. Теперь мы можем указать браузеру, что это значение — цвет, и анимировать его нужно как цвет. ❗❗❗

➡️ Правило @property — новый способ задать пользовательские переменные.В этом правиле переменную задают вместе с её типом, значением по умолчанию и информацией о наследовании. Все свойства нужно указывать обязательно. Имя переменной указывается в имени директивы.

✏️ Пример написания:

@property --color{
    syntax: '<color>';
    inherits: false;
    initial-value: red;
}

Когда эта переменная нам понадобится в коде, мы можем обратиться к ней напрямую:

✏️ Пример написания:

background-image: linear-gradient(20deg, var(--color) 10%, blue 90%);











1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 0️⃣ #️⃣ 🔣 ◀️ ⬇️ ▶️ ⬅️ 🔠 🔡 🔤 ↙️ ↘️ ➡️➡️ ⬆️ ↖️ ↗️ ⏬ ⏫ 🔽 ⤵️ ⤴️ ↩️ ↪️ ↔️ ↕️ 🔼 🔃 🔄 ⏪ ⏩ ℹ️ 🆗 🔀 🔁 🔂 🆕 🔝 🆙 🆒 🆓 🆖 🎦 🈁 📶 🈹 🈴 🈺 🈯 🈷️ 🈶 🈵 🈚 🈸 🈳 🈲 🈂️ 🚻 🚹 🚺 🚼 🚭 🅿️ ♿ 🚇 🛄 🉑 🚾 🚰 🚮 ㊙️ ㊗️ Ⓜ️ 🛂 🛅 🛃 🉐 🆑 🆘 🆔 🚫 🔞 📵 🚯 🚱 🚳 🚷 🚸 ⛔ ✳️ ❇️ ✴️ 💟 🆚 📳 📴 💹 💱 ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ⛎ 🔯 ❎ 🅰️ 🅱️ 🆎 🅾️ 💠 ♻️ 🔚 🔙 🔛 🔜 🕐 🕜 🕙 🕥 🕚 🕦 🕛 🕧 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 💲 ©️ ®️ ™️ ❌ ❗❗ ‼️ ⁉️ ⭕ ✖️ ➕ ➖ ➗ 💮 💯 ✔️ ☑️ 🔘 🔗 ➰ 〰️ 〽️ 🔱 ▪️ ▫️ ◾ ◽ ◼️ ◻️ ⬛ ⬜ ✅ 🔲 🔳 ⚫ ⚪ 🔴 🔵 🔷 🔶 🔹 🔸 🔺 🔻
✏️ Пример написания: