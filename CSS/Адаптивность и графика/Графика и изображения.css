/* Порядок оптимизации изображения */

.подготовить изображения для различных экранов (1х, 2х, 3х);
.перевести их в современные форматы (webp и avif);
.сжать каждое изображение для экономии трафика.

/* Форматы картинок */
.PNG - формат, в котором есть альфа-канал (может быть прозрачный фон или элементы)
.JPEG - самый популярный формат для картинок
.GIF - Большой вес, всего 256 цветов.
.WebP - новый фармат, картинка будет весить примерно на 20% меньше (есть поддержка браузеров)
.AVIF - отличие от WebP у формата AVIF больше цветовой диапазон (нет поддержки браузеров)


/* Оптимизация изображений */
Есть несколько основных правил для оптимизации:

.Выберите подходящий формат. В прошлом уроке мы разобрались что есть JPEG, PNG и GIF. GIF отставим в сторону, он понадобится только для «живых» картинок. А вот PNG можно использовать вместо JPEG там, где вам не нужны миллионы цветов. Например, картинка простая, не многоцветная. Используйте PNG и сэкономите на размере файла.
.Используйте картинки нужного размера. Если блок, в котором картинка отображается, размером 500 на 500 пикселей, не стоит использовать изображение размером 2000 на 2000 пикселей. Измените размер изображения до максимально нужного. Тут есть тонкость в подготовке для разных экранов, об этом поговорим в следующих уроках.
.Используйте для разных разрешений экранов разные изображения. Хорошим тоном считается загружать на мобильном маленькую картинку, на планшете чуть побольше, а большую оставить только для десктопа. Как это делать — расскажем дальше подробно.
.Оптимизируйте изображение. Так вес самого файла можно существенно сократить, не потеряв при этом качество. Это называется сжатием. Для этого обычно используют онлайн-инструменты. Если хочется просто и быстро, советуем TinyJPG. Если хочется поиграть с настройками, можно использовать модный Sqoosh.

.Под контентные изображения, поверх которых есть текст, задавать ещё цветной фон при помощи background-color. Цвет фона должен быть контрастным по отношению к тексту, который написан поверх картинки. Так, даже если картинка не загрузится, текст всё равно можно будет прочитать.


/* Плолтность пикселей */
.Физические пиксели	1	
1 физический пиксель = 1 CSS-пиксель	
250 пикселей в ширину

.Физические пиксели 2	
2 физических пикселя = 1 CSS-пиксель	
500 пикселей в ширину

.Физические пиксели 3	
3 физических пикселя = 1 CSS-пиксель	
750 пикселей в ширину


/* несколько способов дать браузеру выбор из нескольких картинок для уточнения плотности изображения  */

.Атрибут /* srcset  */

 Нужно сохранить картинку в трёх размерах: 250, 500 и 750 пикселей в ширину. А затем подключить её в HTML особым образом. Тогда браузер будет загружать картинку нужного размера в зависимости от того, какая плотность пикселей на устройстве пользователя.
 1x, 2x, 3x - плотность пиксилей на экране

<body>
    <img
      src="./images/flowers.jpeg"
      srcset="
        ./images/flowers.jpeg 1x,
        ./images/flowers-2x.jpeg 2x,
        ./images/flowers-3x.jpeg 3x
      "
      alt="Букет ярких роз крупным планом"
    />
  </body>


 /*  Можно подключить картинки не только для разной плотности пикселей, но и для каждого из размеров экранов, а также в разных форматах. */

.Теги <picture> + <source>

<body>
    <picture>
      <source srcset="./images/flowers.avif" type="image/avif" />
      <source srcset="./images/flowers.webp" type="image/webp" />
      <img src="./images/flowers.jpeg" alt="Букет ярких роз крупным планом" />
      <img src="./images/flowers.jpeg" alt="Букет ярких роз крупным планом">
</picture> 
          </picture>
  </body>

.img железобетонный вариант - Если браузер не узнает ни один из форматов выше, покажет картинку в формате, который точно поддерживается. 

https://www.iana.org/assignments/media-types/media-types.xhtml#image - Сайт для уточнения расширение своего файла и значение для атрибута type для картинок. 



.image-set() - позволяет загружать разные фоновые изображения в зависимости от условий


В зависимости от /* плотности пикселей экрана пользователя  */

div {
    background-image: image-set(
    url("flowers.jpeg") 1x,
    url("flowers-2x.jpeg") 2x);
} 


В зависимости от /* форматы изображения  */

div {
    background-image: url(flowers.jpeg);
    background-image: -webkit-image-set(
    url("flowers.avif") type("image/avif"),
    url("flowers.jpg") type("image/jpeg"));
    background-image: image-set(
    url("flowers.avif") type("image/avif"),
    url("flowers.jpg") type("image/jpeg"));
} 


.Атрибут loading="lazy"

Атрибут loading="lazy" - новая возможность в HTML, появившаяся не так давно — ленивая загрузка. Её суть в том, что при открытии сайта загружаются только те картинки, которые попадают в первый экран. Загрузка остальных картинок ставится «на паузу»

<section class="section">
    <img
      src="./images/image-2.jpg"
      alt="Фото гор."
      class="section__image"
      loading="lazy"
    />
</section>

