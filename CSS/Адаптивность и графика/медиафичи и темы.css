.1 
/* Выбор темы */

.prefers-color-scheme: - определяет предпочитаемую цветовую схему и автоматически переключает на неё.

два значения:
light- **указывает, что пользователь отдал предпочтение светлой теме страницы или не выразил предпочтения;
dark- указывает, что пользователь отдал предпочтение тёмной теме.

@media (prefers-color-scheme: dark) {
    body {
      background-color: #000000;
      color: #ffffff;
    }
} 


.2 
/* .Выбор темы автоматически: Готовый кейс */


  @media (prefers-color-scheme: dark) {
    body {
          --main-text-color: #ffffff;
          --main-background-color: #152028;
    }
}
  
  @media (prefers-color-scheme: light) {
    body {
      --main-text-color: #152028;
      --main-background-color: #ffffff;
    }
} 


.color-scheme: - Настройка сообщает браузеру: какие виды тем поддерживает интерфейс, указывает предпочтительную и меняет дефолтные стили браузера под стилистику текущей темы. 

normal- элемент не имеет тем, поэтому должен отображаться с цветовой темой браузера по умолчанию.
dark- есть поддержка тёмной темы.
light- есть поддержка светлой темы.only — запрещает переопределять цветовую схему. Используется вместе со значением light или dark.

Есть два способа, где указывать color-scheme: в CSS и в HTML.
В CSS свойство можно использовать на root уровне и на уровне элемента:

:root {
    color-scheme: dark;
  }
  
  .block {
    color-scheme: normal
} 
  

В HTML — в теге head: /* Лучше использовать вариант с указанием в HTML */

<meta name="color-scheme" content="dark light" /> 



.3 
/* Анимация и Количество анимации */

.prefers-reduced-motion: - помогает определить, хочет пользователь уменьшить количество анимации или нет.

no-preference- указывает, что пользователь не выразил предпочтений относительно количества анимации.
reduce- что пользователь предпочитает интерфейс с минимальной анимацией, вплоть до полного отключения.

.button {
  /* стили кнопки */
}

@media (prefers-reduced-motion: no-preference) {
.button {
  animation: shaking .5s linear infinite both;
}
}

@keyframes shaking {
0% { transform: translateX(0) }
25% { transform: translateX(5px) }
50% { transform: translateX(-5px) }
75% { transform: translateX(5px) }
100% { transform: translateX(0) }
}

Сначала директивой /* @keyframes */ определяются ключевые кадры и задаётся имя нашей анимации. Затем медиафичей .prefers-reduced-motion: no-preference создаётся условие: показывать анимацию, только если пользователь не стал запрашивать уменьшение количества анимации. А в самом медиавыражении задаётся анимация для нужного элемента свойством animation. В свойстве указывается ссылка на ключевые кадры, длительность анимации, плавность, количество повторений и момент применения стилей ключевых кадров — до или после проигрывания анимации.


.4
/* стилизация в зависимости от желаемого уровня контрастности.  */

.prefers-contrast: Помогает менять стилизацию в зависимости от желаемого уровня контрастности.

no-preference — настройка по умолчанию, пользователь не выразил никаких предпочтений.
more- предпочтение высокого уровня контрастности
less- предпочтение низкого уровня контрастности.
custom- режим принудительных цветов.
Медиафича особенно полезна для людей с проблемами визуального восприятия.

Пользователи, которые испытывают трудности с чтением текста, предпочитают высокую контрастность.
Люди с дислексией пользуются низким контрастом, так как при высоком уровне они чувствуют, что буквы сияют, как если бы они подсвечивались слишком ярким светом. Страдающие мигренью также могут посчитать высококонтрастные страницы болезненными.


.5
/* Взаимодействие */

.hover: проверяет, позволяет ли основное устройство наводить указатель на элементы.

none- не поддерживает наведение на элемент, например: стилус и сенсорный экран.
hover- поддерживает наведение на элемент, например: мышь, тачпад и контроллер игровой консоли.

.button {
  /* Стили кнопки */
 }
 
 @media (hover: hover) {
   .button:hover {
       box-shadow: inset 0px 0px 0 100px rgb(0 0 0 / 15%);
       cursor: pointer;
   }
} 

 
.pointer: - проверяет наличие и точность основного указывающего устройства.

none- не является указывающим устройством.
coarse- грубая точность, например: сенсорный экран, контроллер игровой консоли и её периферийные устройства.
fine- хорошая точность, например: компьютерная мышь, стилус.

.popup__close {
  /* Стили кнопки */
}

@media (pointer: coarse) {
.popup__close {
      inline-size: 44px;
      block-size: 44px;
}
}

Для сенсорных экранов хороший тон — делать интерактивные элементы размером больше 36px. В примере выше увеличиваем кнопку закрытия попапа для сенсорных экранов, чтобы пользователю было легче попасть по ней.
В устройствах ввода легко запутаться, поэтому вот наглядная таблица:

.hover: none

hover: none /pointer: none 
клавиатура, контроллеры и пульты с кнопками

hover: none / pointer: coarse
смартфоны, сенсорные экраны

hover: none / pointer: fine
базовые устройства со стилусом (Cintiq, Wacom)

.hover: hover

hover: hover / pointer: none
Нет подходящих устроиств

hover: hover / pointer: coarse
Nintendo Wii, контроллеры, Кинект

hover: hover / pointer: fine
мыши, тачпады, продвинутые устройства со стилусом (Surface, Samsung Note, Wacom Intuos Pro)
