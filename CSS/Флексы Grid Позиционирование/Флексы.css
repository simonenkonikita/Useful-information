.display: flex; - превращаем этот элемент в флекс-контейнер. Внутри него начинает действовать флекс-контекст, его дочерние элементы начинают подчиняться свойствам флексбокса.Снаружи флекс-контейнер выглядит как блочный элемент — занимает всю ширину родителя, следующие за ним элементы в разметке переносятся на новую строку.

.display: inline-flex; - Если контейнеру задано значение inline-flex, то снаружи он начинает вести себя как строчный (инлайн) элемент — размеры зависят только от внутреннего контента, встаёт в строку с другими элементами. Внутри это ровно такой же флекс-контейнер, как и при предыдущем значении.

/* СВОЙСТВА ФЛЕКС КОНТЕЙНЕРА*/

flex-direction - Свойство управления направлением основной и поперечной осей.

.row (значение по умолчанию) — основная ось идёт горизонтально слева направо, поперечная ось идёт вертикально сверху вниз.
.row-reverse — основная ось идёт горизонтально справа налево, поперечная ось идёт вертикально сверху вниз.
.column — основная ось идёт вертикально сверху вниз, поперечная ось идёт горизонтально слева направо.
.column-reverse — основная ось идёт вертикально снизу вверх, поперечная ось идёт горизонтально слева направо.


flex-wrap - свойство отвечающее за перенос элементов

.nowrap флекс-элементы помещаются (или пытаются уместиться) в один ряд и не переносятся в новый ряд, даже если не влезают в размеры родителя.

.wrap флекс-элементы будут иметь возможность перенестись в новый ряд, если не влезают в одну линию в рамках родителя.

.wrap-reverse. В этом случае элементы будут располагаться снизу вверх, заполнив собой сперва нижний ряд, а те, что не влезли, перепрыгнут в ряд выше.


flex-flow - свойство-шорткат для одновременного определения значений свойств flex-direction и flex-wrap.

.Пример:
flex-flow: row nowrap;


justify-content - Свойство позволяет выравнивать флекс-элементы внутри флекс-контейнера по основной оси.

.start — элементы прижимаются к тому краю, откуда начинается чтение на том языке, на котором отображается сайт.
.end — элементы прижимаются к краю, противоположному началу направления чтения на языке сайта.
.flex-start — элементы прижимаются к краю, от которого начинается основная ось.
.flex-end — элементы прижимаются к краю, у которого основная ось заканчивается.
.left — элементы прижмутся к левому краю родителя.
.right — элементы прижмутся к правому краю родителя.
.center — элементы выстраиваются по центру родителя.
.space-between — крайние элементы прижимаются к краям родителя, оставшиеся выстраиваются внутри контейнера равномерно, так, чтобы между ними были одинаковые отступы.
.space-around — свободное пространство делится поровну между элементами и по половине от этой доли размещается по бокам от каждого элемента. Таким образом, между соседними элементами будет равное расстояние, а снаружи крайних элементов — по половине этого расстояния.
.space-evenly — свободное место будет распределено так, чтобы расстояние между любыми двумя элементами было одинаковым и расстояние от крайних элементов до края было таким же.


align-items - Свойство выравнивания элементов внутри контейнера по поперечной оси.

.stretch (значение по умолчанию) — элементы растягиваются вдоль поперечной оси так, чтобы заполнить всего родителя. Это очень удобно, если вы делаете двухколоночный макет. Раньше приходилось при помощи разных костылей добиваться одинаковой высоты, а теперь достаточно сделать контейнер флексом, и колонки по умолчанию будут одной высоты.
.flex-start или start — элементы выстраиваются у начала поперечной оси. Разница между ними лишь в том, что второе значение «уважает» направление чтения выбранного языка.
.flex-end или end — элементы выстраиваются у конца поперечной оси. Разница между первым и вторым значениями аналогична предыдущему пункту.
.center — элементы выстраиваются по центру поперечной оси.
.baseline — элементы выравниваются по базовой линии текста. «Базовая линия» — baseline — воображаемая линия, проходящая по нижнему краю знаков шрифта (без учёта выносных элементов).


align-content - Свойство распределяет свободное пространство по поперечной оси между рядами флекс-элементов.

.stretch (значение по умолчанию) — ряды растягиваются одинаково, так, чтобы занять всё доступное пространство родителя.
.flex-start / start — все ряды располагаются у начала поперечной оси. Первое значение не зависит от направления чтения текущего языка, в отличие от второго.
.flex-end / end — все ряды располагаются у конца поперечной оси. end «уважает» направление чтения текущего языка.
.center — ряды выравниваются по центру родителя.
.space-between — первый ряд прижимается к началу поперечной оси, последний — к концу поперечной оси, а остальные располагаются так, чтобы свободное пространство было поделено на отступы между ними равномерно.
.space-around — отступы у каждого ряда равнозначны отступам у любого другого ряда.
.space-evenly — отступы между рядами и от краёв родителя одинаковые.

*gap - С помощью этого свойства можно с лёгкостью задавать отступы между строками и столбцами. Является краткой записью свойств row-gap и column-gap.


/* СВОЙСТВА ФЛЕКС ЭЛЕМЕНТА */

order- - свойства можно менять порядок отображения флекс-элементов внутри флекс-контейнера. По умолчанию равно 0.

 /* Выравнивание одного флекс элемента */ 

align-self - При помощи этого свойства можно выровнять один или несколько элементов иначе, чем задано у родительского элемента. Например, в коде выше у родителя задано выравнивание вложенных элементов по верхнему краю родителя. А для элемента с классом .item мы задаём выравнивание по нижнему краю.


/* Flex basis, flex-grow и flex-shrink */

flex-grow - свойство указывает, может ли вырастать флекс-элемент при наличии свободного места. По умолчанию значение равно 0. Значением может быть любое положительное целое число (включая 0).
Если у всех флекс-элементов будет прописано flex-grow: 1, то свободное пространство в контейнере будет равномерно распределено между всеми.
Если при этом одному из элементов мы зададим flex-grow: 2, то он постарается занять в два раза больше свободного места, чем его соседи.


flex-shrink - Свойство  полностью противоположно свойству flex-grow. Если в контейнере не хватает места для расположения всех элементов без изменения размеров, то свойство flex-shrink указывает, в каких пропорциях элемент будет уменьшаться.
Чем больше значение у этого свойства, тем быстрее элемент будет сжиматься по сравнению с соседями, имеющими меньшее значение.
Значение по умолчанию — 1. Значением может быть любое целое положительное число (включая 0).

Два предыдущих свойства работают с пропорциональным разделением пространства, не с конкретными размерами. Они довольно непростые, даже опытный разработчик не всегда знает, как они в точности работают. Загляните в конец статьи, если хотите подробнее почитать о каждом из них.


flex-basis - Свойство flex-basis указывает на размер элемента до того, как свободное место будет распределено (см. flex-grow).
Значением может быть размер в любых относительных или абсолютных единицах: 20rem, 5vw, 250px. А также можно использовать ключевое слово auto (значение по умолчанию). В этом случае при расчёте размера элемента будут приниматься во внимание значения свойств width, max-width, min-width или аналогичные свойства высоты, в зависимости от того, в каком направлении идёт основная ось.
Если никакие размеры не заданы, а свойству flex-basis установлено значение auto, то элемент занимает столько пространства, сколько нужно для отображения контента.

flex- Свойство-шорткат, с помощью которого можно указать значение трёх свойств одновременно: flex-grow, flex-shrink и flex-basis. Первое значение является обязательным, остальные опциональны.
Значение по умолчанию: 0 1 auto, что расшифровывается как flex-grow: 0, flex-shrink: 1, flex-basis: auto.


