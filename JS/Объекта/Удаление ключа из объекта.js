✅
/* Удаление ключа из объекта / Оператор: delete =========================*/

🔶Встроенный способ удаления ключей — оператор delete. 

const obj = { one: 1 };
console.log(obj.one); // 1

delete obj.one;
console.log(obj.one); // undefined

❗Если вы знаете наверняка, что ключ в объекте вам больше не понадобится, удаляйте его оператором delete


✅
/* Проверка наличия ключа в объекте / Оператор: in ======================*/

🔶Проверить, есть ли ключ в объекте, можно оператором in. Для этого нужно указать имя ключа в кавычках, затем написать in и имя объекта, в котором ищем это свойство:

✏️ Пример написания:

const whoIsAtHome = { // англ. who is at home, «кто есть дома?»
  father: 'папа',
  mother: 'мама'
};

console.log('father' in whoIsAtHome); // true


✏️ Пример написания:

const home = { // англ. home, «дом»
  mother: 'мама',
  father: 'папа',
  children: {
        child1: 'сыночек',
        child2: 'сыночек',
        child3: 'сыночек',
        child4: 'сыночек',
        child5: 'лапочка-дочка',
    }
};

if ('mother' in home) {
    console.log('Позовите маму');
} else if ('father' in home) {
    console.log('Позовите папу');
} else {
    console.log('Попозже зайду');
} // "Позовите маму"

delete home.mother;

if ('mother' in home) {
    console.log('Позовите маму');
} else if ('father' in home) {
    console.log('Позовите папу');
} else {
    console.log('Попозже зайду');
} // "Позовите папу"

❗❗❗Часто нам нужно проверить не столько наличие в объекте ключа, сколько является ли его значение truthy❗❗❗:

const home = { 
  father: 'папа',
  children: {
      child1: 'сыночек',
      child2: 'сыночек',
      child3: 'сыночек',
      child4: 'сыночек',
      child5: 'лапочка-дочка',
  }
}

if (home.father) {
console.log('Откройте, пожалуйста');
} else {
console.log('Позовите, пожалуйста, кого-нибудь из взрослых');
}

❗❗❗В этом случае обходятся без оператора in, передавая условной конструкции само свойство: оно преобразовывается к логическому типу.❗❗❗












1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 0️⃣ #️⃣ 🔣 ◀️ ⬇️ ▶️ ⬅️ 🔠 🔡 🔤 ↙️ ↘️ ➡️➡️ ⬆️ ↖️ ↗️ ⏬ ⏫ 🔽 ⤵️ ⤴️ ↩️ ↪️ ↔️ ↕️ 🔼 🔃 🔄 ⏪ ⏩ ℹ️ 🆗 🔀 🔁 🔂 🆕 🔝 🆙 🆒 🆓 🆖 🎦 🈁 📶 🈹 🈴 🈺 🈯 🈷️ 🈶 🈵 🈚 🈸 🈳 🈲 🈂️ 🚻 🚹 🚺 🚼 🚭 🅿️ ♿ 🚇 🛄 🉑 🚾 🚰 🚮 ㊙️ ㊗️ Ⓜ️ 🛂 🛅 🛃 🉐 🆑 🆘 🆔 🚫 🔞 📵 🚯 🚱 🚳 🚷 🚸 ⛔ ✳️ ❇️ ✴️ 💟 🆚 📳 📴 💹 💱 ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ⛎ 🔯 ❎ 🅰️ 🅱️ 🆎 🅾️ 💠 ♻️ 🔚 🔙 🔛 🔜 🕐 🕜 🕙 🕥 🕚 🕦 🕛 🕧 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 💲 ©️ ®️ ™️ ❌ ❗❗ ‼️ ⁉️ ⭕ ✖️ ➕ ➖ ➗ 💮 💯 ✔️ ☑️ 🔘 🔗 ➰ 〰️ 〽️ 🔱 ▪️ ▫️ ◾ ◽ ◼️ ◻️ ⬛ ⬜ ✅ 🔲 🔳 ⚫ ⚪ 🔴 🔵 🔷 🔶 🔹 🔸 🔺 🔻
✏️ Пример написания: