✅
/* Атрибуты и их методы */

Управлять атрибутами можно:
-вызовом специальных методов;
-заменой атрибута через свойство DOM-элемента;
-обращением к специальным свойствам.


✅
/* -вызовом специальных методов; */

С атрибутом HTML-элемента можно выполнить одно из четырёх действий:
-получить значение;
-проверить наличие;
-изменить значение;
-удалить атрибут.


1️⃣ Получаем значение атрибута: метод getAttribute

🔶 Метод getAttribute принимает на вход имя атрибута и возвращает его значение:

✏️ Пример написания:

/* получаем первый элемент в DOM, описанный тегом <img>,
т. е. первое изображение на странице */

let imageOnPage = document.querySelector('img');

imageOnPage.getAttribute('src'); // вернётся ссылка, записанная в атрибуте src первого изображения, которое вернул метод querySelector


2️⃣Проверяем, есть ли у тега атрибут: метод hasAttribute

🔶Убедиться в наличии атрибута удобно методом hasAttribute, который возвращает true, если атрибут задан, и false, если нет.

✏️ Пример написания:

bigAndRed.hasAttribute('onclick'); // true
bigAndRed.hasAttribute('несуществующий атрибут'); // false
bigAndRed.hasAttribute('disabled'); // true


3️⃣Задаём значение атрибута: метод setAttribute

🔶Метод setAttribute принимает на вход два аргумента: имя атрибута, значение которого мы хотим задать, и само значение:

✏️ Пример написания:

bigAndRed.setAttribute('lang', 'ru');
сonsole.log(bigAndRed.hasAttribute('lang')); //true

❗Оба аргумента — строки. Если передать значение другого типа, оно всё равно будет приведено к строке.

✏️ Пример написания:

disabledCheckbox.setAttribute('disabled', true); // Делаем чекбокс неактивным.

✔️Принято отдельно прописывать стили для неактивных кнопок. Задайте неактивной кнопке цвет фона #f1f1f1. ✔️

✏️ Пример написания:

resetButton.setAttribute('style', 'background-color: #f1f1f1');
// или
resetButton.style.backgroundColor = '#f1f1f1';


4️⃣Удаляем атрибут: метод removeAttribute

🔶Метод removeAttribute удаляет атрибут у элемента:

✏️ Пример написания:

bigAndRed.hasAttribute('disabled'); // true
bigAndRed.removeAttribute('disabled'); // удаляем атрибут
bigAndRed.hasAttribute('disabled'); // false


5️⃣Атрибуты без значения

🔶Чтобы сделать чекбокс неактивным, нужно передать методу setAttribute два аргумента: disabled и любой другой. Согласно спецификации, у setAttribute есть два обязательных параметра, но в то же время disabled не предполагает никакого значения. Получается, чтобы метод сработал, второй аргумент необходим, но его значение неважно:

✏️ Пример написания:

disabledCheckbox.setAttribute('disabled', true);
disabledCheckbox.setAttribute('disabled', 'Значение этого аргумента может быть любым');
disabledCheckbox.setAttribute('disabled', 'Мы передаём его, только чтобы метод отработал');
disabledCheckbox.setAttribute('disabled', false); // и даже этот вызов сработает


✅
/* Работа с атрибутами через встроенные свойства */

Когда мы хотим работать с элементом на странице, сначала нужно сделать из него объект: ведь JS умеет работать только с объектами. При этом атрибуты тега становятся свойствами объекта:

<!-- Задаём тегу a атрибут href -->
<a href="https://ya.ru">Поиск</a>


// Выбираем элемент a
let a = document.querySelector('a');

a.href; // https://ya.ru — у элемента a появилось свойство href

В этом и заключается управление атрибутами через свойство объекта. Их можно не только получать, но и перезаписывать:

a.href = 'https://praktikum.yandex.ru/'

Чаще всего можно работать как с атрибутами тегов, так и со свойствами объектов: они хранят одни и те же значения. Но из этого правила есть исключения. Например, если в атрибут href записать неполную ссылку, в объекте она всё равно преобразуется в полную!


❗❗❗Cвойства и атрибуты — не одно и то же. Если задать тегу атрибут, которого, согласно спецификации W3C, у этого тега быть не должно, то и соответствующее свойство у объекта не появится. Но мы всё равно можем получить значение этого атрибута.


















Symbols
1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 0️⃣ #️⃣ 🔣 ◀️ ⬇️ ▶️ ⬅️ 🔠 🔡 🔤 ↙️ ↘️ ➡️➡️ ⬆️ ↖️ ↗️ ⏬ ⏫ 🔽 ⤵️ ⤴️ ↩️ ↪️ ↔️ ↕️ 🔼 🔃 🔄 ⏪ ⏩ ℹ️ 🆗 🔀 🔁 🔂 🆕 🔝 🆙 🆒 🆓 🆖 🎦 🈁 📶 🈹 🈴 🈺 🈯 🈷️ 🈶 🈵 🈚 🈸 🈳 🈲 🈂️ 🚻 🚹 🚺 🚼 🚭 🅿️ ♿ 🚇 🛄 🉑 🚾 🚰 🚮 ㊙️ ㊗️ Ⓜ️ 🛂 🛅 🛃 🉐 🆑 🆘 🆔 🚫 🔞 📵 🚯 🚱 🚳 🚷 🚸 ⛔ ✳️ ❇️ ✴️ 💟 🆚 📳 📴 💹 💱 ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ⛎ 🔯 ❎ 🅰️ 🅱️ 🆎 🅾️ 💠 ♻️ 🔚 🔙 🔛 🔜 🕐 🕜 🕙 🕥 🕚 🕦 🕛 🕧 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 💲 ©️ ®️ ™️ ❌ ❗❗ ‼️ ⁉️ ⭕ ✖️ ➕ ➖ ➗ 💮 💯 ✔️ ☑️ 🔘 🔗 ➰ 〰️ 〽️ 🔱 ▪️ ▫️ ◾ ◽ ◼️ ◻️ ⬛ ⬜ ✅ 🔲 🔳 ⚫ ⚪ 🔴 🔵 🔷 🔶 🔹 🔸 🔺 🔻
✏️ Пример написания:
