✅
/* Массивы */

🔶Массивы — структуры данных, которые могут хранить не одно, а несколько значений. 

✏️ Пример написания:

let months = ['Январь', 'Февраль', 'Март', 'Апрель', 
    'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 
    'Октябрь', 'Ноябрь', 'Декабрь'];
// массив, в котором собраны все месяцы в году

❗Номер элемента в массиве называют индексом.
❗Отсчёт ведётся с нуля: 


свойство length -  возвращает длину массива.length
Обратиться к свойству length можно двумя способами.

1️⃣по имени переменной: 

months.length;

2️⃣написать слово length через точку прямо после квадратных скобок массива:

[].length; // 0 - пустой массив не содержит элементов, его длина 0
[1, 2, 3].length; // 3 — в массиве три элемента, его длина 3 


✅
/* Проверка на массив */ 

Если для JS нет разницы, с массивом он работает или с обычным объектом, то для разработчика эта разница может быть важна. Оператор typeof тут не поможет: для массива он тоже вернёт значение object:

const arr = [1, 2, 3];

console.log(typeof arr); // "object" 

удобный способ делать это — метод Array.isArray:

const arr = [1, 2, 3];
const obj = {};

console.log(Array.isArray(arr)); // true
console.log(Array.isArray(obj)); // false


✅
/* Передача по ссылке */ 

Поскольку массивы — это объекты, они передаются и сравниваются по ссылке.

const a = [1, 2, 3];
const b = [1, 2, 3];
const c = b;

console.log(a === b); // false
console.log(b === c); // true 


✅
/* Копирование массива */ 

Как объекты, массивы можно копировать методом Object.assig``n:

const boringTale = [
    'А роза',
    'упала',
    'на лапу',
    'Азора'
];

const boringTale2 = Object.assign([], boringTale);

console.log(boringTale === boringTale2); // false. 
// Это два разных массива, но с одинаковым набором элементов.

Более простой способ скопировать массив — вызвать метод slice, не передавая тому никаких аргументов:

const boringTale = [
    'А роза',
    'упала',
    'на лапу',
    'Азора'
];

const boringTale2 = boringTale.slice();

boringTale === boringTale2; // false

/* Поскольку это два разных массива,
их сравнение возвращает false. При этом
все элементы в обоих массивах идентичны: */

boringTale[0] === boringTale2[0]; // true
boringTale[1] === boringTale2[1]; // true
boringTale[2] === boringTale2[2]; // true
boringTale[3] === boringTale2[3]; // true





1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 0️⃣ #️⃣ 🔣 ◀️ ⬇️ ▶️ ⬅️ 🔠 🔡 🔤 ↙️ ↘️ ➡️➡️ ⬆️ ↖️ ↗️ ⏬ ⏫ 🔽 ⤵️ ⤴️ ↩️ ↪️ ↔️ ↕️ 🔼 🔃 🔄 ⏪ ⏩ ℹ️ 🆗 🔀 🔁 🔂 🆕 🔝 🆙 🆒 🆓 🆖 🎦 🈁 📶 🈹 🈴 🈺 🈯 🈷️ 🈶 🈵 🈚 🈸 🈳 🈲 🈂️ 🚻 🚹 🚺 🚼 🚭 🅿️ ♿ 🚇 🛄 🉑 🚾 🚰 🚮 ㊙️ ㊗️ Ⓜ️ 🛂 🛅 🛃 🉐 🆑 🆘 🆔 🚫 🔞 📵 🚯 🚱 🚳 🚷 🚸 ⛔ ✳️ ❇️ ✴️ 💟 🆚 📳 📴 💹 💱 ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ⛎ 🔯 ❎ 🅰️ 🅱️ 🆎 🅾️ 💠 ♻️ 🔚 🔙 🔛 🔜 🕐 🕜 🕙 🕥 🕚 🕦 🕛 🕧 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 💲 ©️ ®️ ™️ ❌ ❗❗ ‼️ ⁉️ ⭕ ✖️ ➕ ➖ ➗ 💮 💯 ✔️ ☑️ 🔘 🔗 ➰ 〰️ 〽️ 🔱 ▪️ ▫️ ◾ ◽ ◼️ ◻️ ⬛ ⬜ ✅ 🔲 
🔳 ⚫ ⚪ 🔴 🔵 🔷 🔶 🔹 🔸 🔺 🔻
✏️ Пример написания: