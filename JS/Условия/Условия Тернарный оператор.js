✅
/* Объект Math и его методы*/

🔶 тернарный оператор. Он состоит из условия и двух значений: первое вернётся, если результат проверки true, второе — если false.

❗Конструкция с тернарным оператором состоит из условия и двух значений:

/* условие */ ? /* значение, если true */ : /* значение, если false */

Такая конструкция возвращает первое значение, если условие — true, и второе, если false.

✏️ Пример написания:

const a = 5;
const b = a > 10 ? 5 : 0;

console.log(b); // 0, потому что a > 10 — false


🔶Сравните два варианта кода. Вариант с if-else:

✏️ Пример написания:

const love = true;
let result;

if (love) {
  result = 'к сердцу прижмёт';
} else {
  result = 'к чёрту пошлёт';
}

console.log(result); // "к сердцу прижмёт"


И вариант с тернарным оператором:

✏️ Пример написания:

const love = true;
const result = love ? 'к сердцу прижмёт' : 'к чёрту пошлёт';

console.log(result); // "к сердцу прижмёт"

❗Главное отличие — тернарный оператор возвращает значение, а условная конструкция — нет.

❗Используйте тернарный оператор, когда результат зависит от какого-нибудь логического выражения:

const value = 'любит';

console.log(value === 'любит' ? 'к сердцу прижмёт' : 'к чёрту пошлёт');

// "к сердцу прижмёт"




Symbols
1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟 🔢 0️⃣ #️⃣ 🔣 ◀️ ⬇️ ▶️ ⬅️ 🔠 🔡 🔤 ↙️ ↘️ ➡️➡️ ⬆️ ↖️ ↗️ ⏬ ⏫ 🔽 ⤵️ ⤴️ ↩️ ↪️ ↔️ ↕️ 🔼 🔃 🔄 ⏪ ⏩ ℹ️ 🆗 🔀 🔁 🔂 🆕 🔝 🆙 🆒 🆓 🆖 🎦 🈁 📶 🈹 🈴 🈺 🈯 🈷️ 🈶 🈵 🈚 🈸 🈳 🈲 🈂️ 🚻 🚹 🚺 🚼 🚭 🅿️ ♿ 🚇 🛄 🉑 🚾 🚰 🚮 ㊙️ ㊗️ Ⓜ️ 🛂 🛅 🛃 🉐 🆑 🆘 🆔 🚫 🔞 📵 🚯 🚱 🚳 🚷 🚸 ⛔ ✳️ ❇️ ✴️ 💟 🆚 📳 📴 💹 💱 ♈ ♉ ♊ ♋ ♌ ♍ ♎ ♏ ♐ ♑ ♒ ♓ ⛎ 🔯 ❎ 🅰️ 🅱️ 🆎 🅾️ 💠 ♻️ 🔚 🔙 🔛 🔜 🕐 🕜 🕙 🕥 🕚 🕦 🕛 🕧 🕑 🕝 🕒 🕞 🕓 🕟 🕔 🕠 🕕 🕡 🕖 🕢 🕗 🕣 🕘 🕤 💲 ©️ ®️ ™️ ❌ ❗❗ ‼️ ⁉️ ⭕ ✖️ ➕ ➖ ➗ 💮 💯 ✔️ ☑️ 🔘 🔗 ➰ 〰️ 〽️ 🔱 ▪️ ▫️ ◾ ◽ ◼️ ◻️ ⬛ ⬜ ✅ 🔲 🔳 ⚫ ⚪ 🔴 🔵 🔷 🔶 🔹 🔸 🔺 🔻
✏️ Пример написания:
